             Installing and Running CRISPR-DAV Pipeline

The CRISPR-DAV pipeline can be run via docker container or a physical installation.

I. Running via docker

   The docker repository for CRISPR-DAV is called pinetree1/crispr-dav. It has the
pipeline itself and its required tools. No installation of the pipeline is required 
but you be able to run docker on your system. 


   The pipeline includes two example projects. Here are steps to test run
exampl. Running example2 is quite similar.  

  (1) Start the container interactively and mount a path of host to the container

      docker run -it -v /Users/xyz/temp:/User/xyz/temp pinetree1/crispr-dav bash

   The docker image is about 1GB, and takes a few minutes to start up.

   This mounts /Users/xyz/temp in the host to /User/xyz/temp in the container.

   The pipeline is under /opt in the container.

  (2) After starting up, at the prompt in the container, go to example1 directory.

      # cd /opt/crispr-dav/Examples/example1

  (3) Start the pipeline:
      
      # sh run.sh

  (4) When the pipeline is finished, move the results to the shared directory in container.

      # mv deliverables /Users/xyz/temp

  (5) Exit from the container

      # exit

  (6) Now go the host directory to see the results:
      
      Open a browser to view the report index.html file in /Users/xyz/temp/deliverables/GENEX_CR1

   The general steps for analyzing you own project via the docker are simlar. For example,
assuming that there are 3 directories on the host related to your project:
      /Users/xyz/temp/project: where you are going to or already have the input files:
		 amplicon.bed, conf.txt, fastq.list, run.sh, sample.site and site.bed
      /Users/xyz/temp/rawfastq: contain the fastq files
      /Users/xyz/temp/genome: contain the genome files

   You'll mount directories to the container using the same paths in the container:

   docker run -it -v /Users/xyz/temp/project:/Users/xyz/temp/project \
      -v /Users/xyz/temp/rawfastq:/Users/xyz/temp/rawfastq \
      -v /Users/xyz/temp/genome:/Users/xyz/temp/genome \
      pinetree1/crispr-dav bash

   cd /Users/xyz/temp/project

   Make sure the paths in conf.txt, fastq.list and run.sh reflect those in the container. Start 
the pipeline by: sh run.sh.  The results will be present in the project directory. 

 
II. Run the pipeline via a physical installation

1. Install the pipeline code
  
    git clone https://github.com/pinetree1/crispr-dav.git

    In the resulting crispr-dav directory, all the Perl programs (*.pl) use this line to invoke 
    the perl in your environment:

         #!/usr/bin/env perl 

    Type "ls -l /usr/bin/env" to see if it is available. If not available, try 
    "which env" and then replace the shebang in all *.pl file with the right path.

2. Install required tools    

The pipeline utilizes a set of tools, most of which are common in
bioinformatics field. These include perl and python modules, R, and NGS tools.  

(1) Perl modules. 

    The following modules are ususally not present in default perl install.  

       Config::Tiny
       Excel::Writer::XLSX
       JSON

    Run this command to check whether they are already installed: 

        perl -e "use <module>", e.g. perl -e "use Config::Tiny"

    If there is no output, it means the module is already installed. Error message
	should show up if it's not installed.

	If you have cpanm, installing a perl module as root is simple:

        cpanm <module>, e.g. cpanm Config::Tiny
 
    If you prefer to install modules in local directory, these steps show how to 
    install Config::Tiny into local directory $HOME/perlmod.    

        wget http://search.cpan.org/CPAN/authors/id/R/RS/RSAVAGE/Config-Tiny-2.23.tgz 
        tar xvfz Config-Tiny-2.23.tgz
        cd Config-Tiny-2.23
        perl Makefile.PL INSTALL_BASE=$HOME/perlmod
        make
        make install

	If a module is installed globally, it is already in @INC which has paths that perl 
    searches for a module. 

    But if the module is installed in a local path, you'll need 
    to add the path to @INC by setting PERL5LIB, for example, by adding this line the 
    begining of the pipeline script run.sh in crispr-dav directory.

        export PERL5LIB=$HOME/perlmod:$PERL5LIB

(2) NGS tools

    BWA: https://sourceforge.net/projects/bio-bwa/files/bwa-0.7.15.tar.bz2/download 

    Samtools: https://sourceforge.net/projects/samtools/files/samtools/1.3.1/samtools-1.3.1.tar.bz2/download
        Older version of samtools is OK too.

    Bedtools2: https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-2.25.0.tar.gz
        Must have version bedtools2.

    PRINSEQ: https://sourceforge.net/projects/prinseq/files/standalone/prinseq-lite-0.20.4.tar.gz/download 
        Be sure to make the program prinseq-lite.pl executable: 
        chmod +x prinseq-lite.pl

    ABRA: https://github.com/mozack/abra/releases/download/v0.97/abra-0.97-SNAPSHOT-jar-with-dependencies.jar
        Java 1.7 or higher is needed to run ABRA.

(3) R and packages

    R software: https://cran.r-project.org/src/base/R-3/R-3.2.1.tar.gz

    R packages: ggplot2, naturalsort

    To install the packages, after starting R, type:

    >install.packages("ggplot2")

    >install.packages("naturalsort")

    If you get permission errors, you may need to install R in a local directory.

(4) Python program 

    pysamstats: https://github.com/alimanfoo/pysamstats 

    Check the web site for installation instructions(for root). 

    If you want to install it in your home directory, you may try these steps:

    A. Install pysam module

        pip install --install-option="--prefix=$HOME" pysam==0.8.4

    This would install pysam in $HOME/lib/python2.7/site-packages, assuming
    your Python version is 2.7.

	B. Install pysamstats

        git clone git://github.com/alimanfoo/pysamstats.git
        cd pysamstats
        python setup.py install --prefix=$HOME

    This would install pysamstats executable script in $HOME/bin and
    pysamstats module in $HOME/lib/python2.7/site-packages.

    C. Check whether the modules can be loaded by running this:  

       $ python

       >>>import pysam
       >>>import pysamstats
       >>>exit()

    If there is no output, the installation is successful. Otherwise, try to 
    include you local library path to PYTHONPATH before trying to import. 

       export PYTHONPATH=$PYTHONPATH:$HOME/lib/python2.7/site-packages

    If this works, be sure to include the statement in the pipeline's run.sh. 

3. Test run 

    The pipeline can be started using the template shell script run.sh, which 
    invokes the main program crispr.pl. Modify the files referred to in
run.sh to suit your project.    
    
    For test run, CRISPR-DAV includes two examples in Examples directory. The 
    example1 uses a genome as reference, whereas example2 uses an amplicon 
    sequence as reference. The procedure to run the pipelines is similar.
 
    cd crispr-dav/Examples/example1

    Modify the conf.txt and run.sh. 

	Then start the pipeiline:

    	sh run.sh &> r.log &

    The pipeline would create 2 directories: 

        align: contains the intermediate files.  
        deliverables: contains the results. The HTML report file is index.html. 
